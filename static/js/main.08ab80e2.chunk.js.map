{"version":3,"sources":["UI/components/Pages/MainPage/MainPage.module.css","UI/components/Pages/SidePage/SidePage.module.css","UI/components/Pages/MainPage/ForecastWeater/OneDay.module.css","UI/components/Pages/MainPage/CurrentWeather/CurrentWeather.module.css","UI/components/Pages/MainPage/CurrentWeather/CurrentWeather.tsx","DAL/Api.ts","LocalStorage/LocalStorage.tsx","BLL/weatherReducer.ts","UI/components/Pages/MainPage/ForecastWeater/OneDay.tsx","UI/components/Pages/MainPage/MainPage.tsx","UI/components/Pages/SidePage/HourlyForecast/Hourly.tsx","UI/components/Pages/SidePage/SidePage.tsx","UI/components/Routes/Routes.tsx","App.tsx","reportWebVitals.ts","BLL/store.ts","index.tsx"],"names":["module","exports","CurrentWeather","name","temp","country","ts","wind_spd","description","clouds","ms","get2digitString","num","helper","lang","options","Date","toLocaleString","weekdayName","weekday","time","getHours","getMinutes","date","month","day","className","style","main","oneBlock","city","twoBlock","Math","round","API_KEY","instance","axios","create","baseURL","api","cityName","get","saveValue","obj","localStorage","setItem","JSON","stringify","restoreState","getItem","parse","initialState","error","saveCity","saveCountry","currentWeather","forecast","hours","errorDetectedAC","type","setForecastWeatherAC","dailyData","OneDay","dateName","year","card","MainPage","useSelector","state","weather","dispatch","useDispatch","useState","value","setValue","valueCountry","setValueCountry","useEffect","a","response","forecastData","data","slice","getCurrentWeatherTC","block","container","map","current","index","buttons","onClick","link","inactive","activeClassName","active","to","cardsBlock","cards","high_temp","valid_date","HourlyForecast","SidePage","useParams","history","useHistory","hourlyData","getHourlyForecastWeatherTC","getForecastWeatherTC","console","log","form","placeholder","onChange","e","currentTarget","btn","inputValueSearch","push","location","longTermForecast","hourlyForecast","hour","app_temp","Routes","path","exact","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","stateCopy","city_name","country_code","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08ab80e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"MainPage_block__k9ed-\",\"container\":\"MainPage_container__3RFBY\",\"currentWeather\":\"MainPage_currentWeather__1mJHa\",\"cardsBlock\":\"MainPage_cardsBlock__KjOgV\",\"cards\":\"MainPage_cards__2V7jk\",\"buttons\":\"MainPage_buttons__2FR6m\",\"link\":\"MainPage_link__38CrP\",\"inactive\":\"MainPage_inactive__3gQ8a\",\"active\":\"MainPage_active__Hd6X0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SidePage_container__117Aw\",\"form\":\"SidePage_form__3vbBd\",\"btn\":\"SidePage_btn__QKPA9\",\"location\":\"SidePage_location__3sQyh\",\"longTermForecast\":\"SidePage_longTermForecast__a3aDd\",\"hourlyForecast\":\"SidePage_hourlyForecast__2cBQk\",\"cards\":\"SidePage_cards__N_vJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"OneDay_card__3CfjS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"CurrentWeather_main__3wJpS\",\"oneBlock\":\"CurrentWeather_oneBlock__HKlQb\",\"twoBlock\":\"CurrentWeather_twoBlock__2DumD\",\"city\":\"CurrentWeather_city__1FoG7\",\"temp\":\"CurrentWeather_temp__2RGXo\",\"date\":\"CurrentWeather_date__WYoy3\"};","import React, {FC} from \"react\";\r\nimport style from './CurrentWeather.module.css'\r\n\r\ntype PropsType = {\r\n    name: string\r\n    country: string\r\n    temp: number\r\n    ts: number\r\n    wind_spd: number\r\n    description: string\r\n    clouds: number\r\n}\r\n\r\nexport const CurrentWeather: FC<PropsType> =\r\n    ({name, temp, country, ts, wind_spd, description,clouds}) => {\r\n        const ms = ts * 1000;\r\n        const get2digitString = (num: number) => num < 10 ? '0' + num : num\r\n        const helper = (lang: string, options: {}) => new Date(ms).toLocaleString(lang, options)\r\n        const weekdayName = helper('eng', {weekday: 'long'})\r\n        const time = get2digitString(new Date(ms).getHours()) + ':' + get2digitString(new Date(ms).getMinutes())\r\n        const date = helper('eng', {month: 'long', day: 'numeric'})\r\n        return (\r\n            <div className={style.main}>\r\n                <div className={style.oneBlock}>\r\n                    <div className={style.city}>{name}, {country}</div>\r\n                    <div className={style.date}>{weekdayName}, {date}, {time}</div>\r\n                    <div className={style.temp}>{temp > 0 ? `+${temp} °C` : `${temp} °C`}</div>\r\n                </div>\r\n\r\n                <div className={style.twoBlock}>\r\n                    <div>Wind speed................................... <span>{Math.round(wind_spd)}m/s</span></div>\r\n                    <div>Description............ <span>{description}</span></div>\r\n                    <div>Clouds.............................................. <span>{clouds} %</span></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }","import axios from 'axios'\r\n\r\nconst API_KEY = '42cc24f28fbb425f9f843ed17ea96e72'\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://api.weatherbit.io/v2.0`\r\n})\r\nexport const api = {\r\n    getCurrentWeather(cityName: string, country: string) {\r\n        return instance\r\n            .get<CurrentWeatherResponseType>(`/current?&city=${cityName},${country}&key=${API_KEY}`)\r\n    },\r\n    getForecastWeather(cityName: string) {\r\n        return instance\r\n            .get<ForecastResponseType>(`/forecast/daily?city=${cityName}&key=${API_KEY}`)\r\n    },\r\n    getHourlyForecastWeather(cityName: string){\r\n        return instance\r\n            .get<HourlyForecastResponseType>(`/forecast/hourly?city=${cityName}&key=${API_KEY}&hours=10`)\r\n    }\r\n\r\n}\r\n\r\n\r\n//Response Types\r\nexport type ItemType = {\r\n    rh: number,\r\n    pod: string,\r\n    lon: number,\r\n    pres: number,\r\n    timezone: string,\r\n    ob_time: string,\r\n    country_code: string,\r\n    clouds: number,\r\n    ts: number,\r\n    solar_rad: number,\r\n    state_code: string,\r\n    city_name: string,\r\n    wind_spd: number,\r\n    wind_cdir_full: string,\r\n    wind_cdir: string,\r\n    slp: number,\r\n    vis: number,\r\n    h_angle: number,\r\n    sunset: string,\r\n    dni: number,\r\n    dewpt: number,\r\n    snow: number,\r\n    uv: number,\r\n    precip: number,\r\n    wind_dir: number,\r\n    sunrise: string,\r\n    ghi: number,\r\n    dhi: number,\r\n    aqi: number,\r\n    lat: number,\r\n    weather: {\r\n        icon: string,\r\n        code: number,\r\n        description: string\r\n    }\r\n    datetime: string,\r\n    temp: number,\r\n    station: string,\r\n    elev_angle: number,\r\n    app_temp: number\r\n}\r\nexport type CurrentWeatherResponseType = {\r\n    data: ItemType[],\r\n    count: number\r\n}\r\n\r\nexport type OneDayType = {\r\n    moonrise_ts: number,\r\n    wind_cdir: string,\r\n    rh: number,\r\n    pres: number,\r\n    high_temp: number,\r\n    sunset_ts: number,\r\n    ozone: number,\r\n    moon_phase: number,\r\n    wind_gust_spd: number,\r\n    snow_depth: number,\r\n    clouds: number,\r\n    ts: number,\r\n    sunrise_ts: number,\r\n    app_min_temp: number,\r\n    wind_spd: number,\r\n    pop: number,\r\n    wind_cdir_full: string,\r\n    slp: number,\r\n    moon_phase_lunation: number,\r\n    valid_date: string,\r\n    app_max_temp: number,\r\n    vis: number,\r\n    dewpt: number,\r\n    snow: number,\r\n    uv: number,\r\n    weather: {\r\n        icon: string,\r\n        code: number,\r\n        description: string\r\n    },\r\n    wind_dir: number,\r\n    max_dhi: null,\r\n    clouds_hi: number,\r\n    precip: number,\r\n    low_temp: number,\r\n    max_temp: number,\r\n    moonset_ts: number,\r\n    datetime: string,\r\n    temp: number,\r\n    min_temp: number,\r\n    clouds_mid: number,\r\n    clouds_low: number\r\n}\r\nexport type ForecastResponseType = {\r\n    data: OneDayType[],\r\n    city_name: string,\r\n    lon: string,\r\n    timezone: string,\r\n    lat: string,\r\n    country_code: string,\r\n    state_code: string\r\n}\r\n\r\nexport type OneHourType ={\r\n    wind_cdir: string,\r\n    rh: number,\r\n    pod: string,\r\n    timestamp_utc: string,\r\n    pres: number,\r\n    solar_rad: number,\r\n    ozone: number,\r\n    weather: {\r\n        icon: string,\r\n        code: number,\r\n        description: string\r\n    },\r\n    wind_gust_spd: number,\r\n    timestamp_local: string,\r\n    snow_depth: number,\r\n    clouds: number,\r\n    ts: number,\r\n    wind_spd: number,\r\n    pop: number,\r\n    wind_cdir_full: string,\r\n    slp: number,\r\n    dni: number,\r\n    dewpt: number,\r\n    snow: number,\r\n    uv: number,\r\n    wind_dir: number,\r\n    clouds_hi: number,\r\n    precip: number,\r\n    vis: number,\r\n    dhi: number,\r\n    app_temp: number,\r\n    datetime: string,\r\n    temp: number,\r\n    ghi: number,\r\n    clouds_mid: number,\r\n    clouds_low: number\r\n}\r\nexport type HourlyForecastResponseType ={\r\n    data: OneHourType[],\r\n    city_name: string,\r\n    lon: string,\r\n    timezone: string,\r\n    lat: string,\r\n    country_code: string,\r\n    state_code: string\r\n}\r\n","export const saveValue=(city: string, country: string)=>{\r\n    let obj={\r\n        'saveCity':city,\r\n        'saveCountry':country\r\n    }\r\n    localStorage.setItem('city', JSON.stringify(obj))\r\n}\r\nexport const restoreState=()=>{\r\n    let obj=localStorage.getItem('city')\r\n    return obj ? JSON.parse(obj):{'saveCity':null, 'saveCountry': null}\r\n}","import {Dispatch} from 'redux';\r\nimport {api, OneHourType, OneDayType, ItemType} from \"../DAL/Api\";\r\nimport {restoreState, saveValue} from \"../LocalStorage/LocalStorage\";\r\n\r\n\r\ntype InitialStateType = {\r\n    error: string | null,\r\n    city: string,\r\n    country: string,\r\n    currentWeather:ItemType[],\r\n    forecast: OneDayType[]\r\n    hours: OneHourType[]\r\n\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    error: null,\r\n    city: restoreState().saveCity,\r\n    country: restoreState().saveCountry,\r\n    currentWeather:[],\r\n    forecast: [],\r\n    hours: []\r\n}\r\n\r\nexport const currentWeatherReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/ERROR_DETECTED':\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n\r\n        case 'APP/SET_FORECAST_WEATHER':\r\n            return {\r\n                ...state,\r\n                forecast: action.dailyData\r\n            }\r\n        case 'APP/SET_CURRENT_WEATHER':\r\n            const stateCopy = {...state}\r\n            stateCopy.city = action.weather[0].city_name\r\n            stateCopy.country = action.weather[0].country_code\r\n            stateCopy.currentWeather=action.weather\r\n            saveValue(stateCopy.city, stateCopy.country)\r\n            return stateCopy\r\n\r\n        case 'APP/SET_HOURLY_FORECAST_WEATHER':\r\n            return {\r\n                ...state,\r\n                hours: action.weather\r\n            }\r\n\r\n        case 'APP/SEARCHED-CITY': {\r\n            return {...state,\r\n                city: action.inputValueSearch\r\n            }\r\n\r\n        }\r\n        default:\r\n\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionsTypes = ReturnType<typeof errorDetectedAC>\r\n    | ReturnType<typeof setForecastWeatherAC>\r\n    | ReturnType<typeof setCurrentWeatherAC>\r\n    | ReturnType<typeof setHourlyWeatherAC>\r\n    | ReturnType<typeof searchedCityAC>\r\n\r\n//action creators\r\nexport const errorDetectedAC = (error: string | null) =>\r\n    ({type: 'APP/ERROR_DETECTED', error} as const)\r\n\r\nexport const setForecastWeatherAC = (dailyData: OneDayType[]) =>\r\n    ({type: 'APP/SET_FORECAST_WEATHER', dailyData} as const)\r\n\r\nexport const setCurrentWeatherAC = (weather: ItemType[]) =>\r\n    ({type: 'APP/SET_CURRENT_WEATHER', weather} as const)\r\n\r\nexport const setHourlyWeatherAC = (weather: OneHourType[]) =>\r\n    ({type: 'APP/SET_HOURLY_FORECAST_WEATHER', weather} as const)\r\n\r\nexport const searchedCityAC = (inputValueSearch: string) =>\r\n    ({type: 'APP/SEARCHED-CITY', inputValueSearch, } as const)\r\n\r\n//thunk creators\r\n\r\nexport const getCurrentWeatherTC = (cityName: string, country: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        const response = await api.getCurrentWeather(cityName, country);\r\n        dispatch(setCurrentWeatherAC(response.data.data))\r\n    } catch (error) {\r\n        dispatch(errorDetectedAC('Error'))\r\n    }\r\n}\r\n\r\nexport const getThreeDayForecastTC = (cityName: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        const response = await api.getForecastWeather(cityName);\r\n        const forecastData = response.data.data.slice(1, 4)\r\n        dispatch(setForecastWeatherAC(forecastData))\r\n    } catch (error) {\r\n        dispatch(errorDetectedAC('Error'))\r\n    }\r\n}\r\n\r\nexport const getForecastWeatherTC = (cityName: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        const response = await api.getForecastWeather(cityName);\r\n        const forecastData = response.data.data.slice(1, 11)\r\n        dispatch(setForecastWeatherAC(forecastData))\r\n    } catch (error) {\r\n        dispatch(errorDetectedAC('Error'))\r\n    }\r\n\r\n}\r\n\r\nexport const getHourlyForecastWeatherTC = (cityName: string) => async (dispatch: Dispatch) => {\r\n\r\n    try {\r\n        const response = await api.getHourlyForecastWeather(cityName);\r\n        const hourlyData = response.data.data\r\n        dispatch(setHourlyWeatherAC(hourlyData))\r\n    } catch (error) {\r\n        dispatch(errorDetectedAC('Error'))\r\n    }\r\n\r\n}\r\n\r\n/*export const changeInputTC = () =>\r\n    async (dispatch: Dispatch, getState: () => AppStateType) => {\r\n        try {\r\n            const state = getState()\r\n            const searchName = state.weather.city\r\n            const response = await api.getHourlyForecastWeather(searchName);\r\n            const hourlyData = response.data.data\r\n            dispatch(setHourlyWeatherAC(hourlyData))\r\n\r\n        } catch (error) {\r\n            dispatch(errorDetectedAC('Error'))\r\n        }\r\n    }*/\r\n\r\n","import React, {FC} from \"react\";\r\nimport style from \"./OneDay.module.css\"\r\n\r\ntype PropsType = {\r\n    date: string\r\n    temp: number\r\n    description: string\r\n    ts: number\r\n}\r\n\r\nexport const OneDay: FC<PropsType> = ({date, temp, description, ts}) => {\r\n    const ms = ts * 1000;\r\n    const weekdayName = new Date(ms).toLocaleString('eng', {weekday: 'long'})\r\n    const dateName = new Date(ms).toLocaleString('eng', {year: 'numeric', month: 'long', day: 'numeric', })\r\n    return (\r\n        <div className={style.card}>\r\n            <div className={style.weekdayName}>{dateName}</div>\r\n            <div className={style.weekdayName}>{weekdayName}</div>\r\n            <div className={style.weekdayName}>{temp>0 ? `+${temp} °C` : `${temp} °C`}</div>\r\n            <button>{description}</button>\r\n\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport style from \"./MainPage.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {CurrentWeather} from \"./CurrentWeather/CurrentWeather\";\r\nimport {AppStateType} from \"../../../../BLL/store\";\r\nimport {getCurrentWeatherTC, getThreeDayForecastTC} from \"../../../../BLL/weatherReducer\";\r\nimport {ItemType, OneDayType} from \"../../../../DAL/Api\";\r\nimport {OneDay} from \"./ForecastWeater/OneDay\";\r\n\r\n\r\nexport const MainPage = () => {\r\n    const name = useSelector<AppStateType, string>(state => state.weather.city)\r\n    const country = useSelector<AppStateType, string>(state => state.weather.country)\r\n    const forecast = useSelector<AppStateType, OneDayType[]>(state => state.weather.forecast)\r\n    const currentWeather = useSelector<AppStateType, ItemType[]>(state => state.weather.currentWeather)\r\n    const dispatch = useDispatch()\r\n    const [value, setValue] = useState<string>(name)\r\n    const [valueCountry, setValueCountry] = useState<string>(country)\r\n\r\n    useEffect(() => {\r\n        dispatch(getThreeDayForecastTC(value))\r\n    }, [dispatch, value])\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getCurrentWeatherTC(value, valueCountry))\r\n    }, [dispatch, value])\r\n\r\n    const onClickHandlerMoscow = () => {\r\n        setValue('Moscow')\r\n        setValueCountry('RU')\r\n    }\r\n    const onClickHandlerBratislava = () => {\r\n        setValue('Bratislava')\r\n        setValueCountry('SK')\r\n    }\r\n    const onClickHandlerMinsk = () => {\r\n        setValue('Minsk')\r\n        setValueCountry('BY')\r\n    }\r\n    return (\r\n        <div className={style.block}>\r\n            <div className={style.container}>\r\n                <div className={style.currentWeather}>\r\n                    {currentWeather.map((current, index) => <CurrentWeather\r\n                            key={index}\r\n                            temp={current.temp}\r\n                            name={name}\r\n                            country={country}\r\n                            ts={current.ts}\r\n                            wind_spd={current.wind_spd}\r\n                            description={current.weather.description}\r\n                            clouds={current.clouds}\r\n                        />\r\n                    )}\r\n                </div>\r\n\r\n                <div className={style.buttons}>\r\n                    <span>Select city</span>\r\n                    <button onClick={onClickHandlerMinsk}>Minsk</button>\r\n                    <button onClick={onClickHandlerMoscow}>Moscow</button>\r\n                    <button onClick={onClickHandlerBratislava}>Bratislava</button>\r\n                </div>\r\n            </div>\r\n            <div className={style.link}>\r\n                <NavLink className={style.inactive} activeClassName={style.active} to={`/in/${name}`}>\r\n                    Прогноз на 10 дней\r\n                </NavLink>\r\n            </div>\r\n            <div className={style.cardsBlock}>\r\n                <span>Three days forecast</span>\r\n                <div className={style.cards}>\r\n\r\n                    {forecast.map((day, index) => (\r\n                        <OneDay\r\n                            key={index}\r\n                            temp={day.high_temp}\r\n                            date={day.valid_date}\r\n                            description={day.weather.description}\r\n                            ts={day.ts}\r\n                        />\r\n                    ))\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React, {FC} from \"react\";\r\nimport style from \"../../MainPage/ForecastWeater/OneDay.module.css\"\r\n\r\ntype PropsType = {\r\n    temp: number\r\n    description: string\r\n    ts: number\r\n}\r\n\r\nexport const HourlyForecast: FC<PropsType> = ({temp, description, ts}) => {\r\n    const ms = ts * 1000;\r\n    const get2digitString = (num: number) => num < 10 ? '0' + num : num\r\n    const helper = (lang: string, options: {}) => new Date(ms).toLocaleString(lang, options)\r\n    const weekdayName = helper('eng', {weekday: 'short'})\r\n    const time = get2digitString(new Date(ms).getHours()) + ':' + get2digitString(new Date(ms).getMinutes())\r\n    const date = helper('eng', {month: 'long', day: 'numeric'})\r\n    return (\r\n        <div className={style.card}>\r\n            <div>{date}</div>\r\n            <div>{weekdayName}, {time}</div>\r\n            <div>{temp>0 ? `+${temp} °C` : `${temp} °C`}</div>\r\n            <button>{description}</button>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport style from \"./SidePage.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../BLL/store\";\r\nimport {OneHourType, OneDayType} from \"../../../../DAL/Api\";\r\nimport {OneDay} from \"../MainPage/ForecastWeater/OneDay\";\r\nimport {\r\n    getForecastWeatherTC,\r\n    getHourlyForecastWeatherTC,\r\n    searchedCityAC\r\n} from \"../../../../BLL/weatherReducer\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {HourlyForecast} from \"./HourlyForecast/Hourly\";\r\n\r\nexport const SidePage = () => {\r\n\r\n    const {cityName} = useParams<{ cityName: string }>()\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const forecast = useSelector<AppStateType, OneDayType[]>(state => state.weather.forecast)\r\n    const hours = useSelector<AppStateType, OneHourType[]>(state => state.weather.hours)\r\n\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        dispatch(getHourlyForecastWeatherTC(cityName))\r\n    }, [dispatch, cityName])\r\n\r\n    useEffect(() => {\r\n        dispatch(getForecastWeatherTC(cityName))\r\n    }, [dispatch, cityName])\r\n    console.log('h+1')\r\n    const getWeather = () => {\r\n        dispatch(searchedCityAC(value))\r\n        history.push(`/in/${value}`)\r\n    }\r\n    /*    console.log(cityName)\r\n        console.log(name)*/\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.form}>\r\n                <input type=\"text\"\r\n                       name=\"city\"\r\n                       placeholder=\"Enter your city\"\r\n                       value={value}\r\n                       onChange={(e) => setValue(e.currentTarget.value)}\r\n                />\r\n                <button className={style.btn} onClick={getWeather}>Get weather</button>\r\n            </div>\r\n            <div className={style.location}>\r\n                <h3>{cityName}</h3>\r\n\r\n            </div>\r\n            <div className={style.longTermForecast}>\r\n                <h3>Daily forecast</h3>\r\n                <div className={style.cards}>\r\n                    {forecast.map((day, index) => (\r\n                        <OneDay\r\n                            key={index}\r\n                            temp={day.high_temp}\r\n                            date={day.valid_date}\r\n                            description={day.weather.description}\r\n                            ts={day.ts}\r\n                        />\r\n                    ))\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n            <div className={style.hourlyForecast}>\r\n                <h3>Hourly forecast</h3>\r\n                <div className={style.cards}>\r\n                    {hours.map((hour, index) => (\r\n                        <HourlyForecast\r\n                            key={index}\r\n                            temp={hour.app_temp}\r\n                            description={hour.weather.description}\r\n                            ts={hour.ts}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {MainPage} from \"../Pages/MainPage/MainPage\";\r\nimport {SidePage} from \"../Pages/SidePage/SidePage\";\r\n\r\nexport const Routes = () => {\r\n\r\n    return(\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={()=><Redirect to={'/main'}/>} />\r\n                <Route path={'/main'} render={()=><MainPage/>}/>\r\n                <Route path={'/in/:cityName'} render={()=><SidePage/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from 'react'\nimport {Routes} from \"./UI/components/Routes/Routes\";\n\n\nfunction App() {\n    return (\n        <div>\n           <Routes/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {currentWeatherReducer} from \"./weatherReducer\";\r\nconst rootReducer = combineReducers({\r\n    weather: currentWeatherReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./BLL/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <App/>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}